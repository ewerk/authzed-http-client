# Schema: https://json.schemastore.org/github-action.json
name: java-client

description: Build OpenAPI Java client for given parameters.

branding:
  color: black
  icon: book

inputs:
  spicedb-version:
    required: true
    description: 'The SpiceDB version to use'
  release-version:
    required: true
    description: 'Maven artifact version to use'
  snapshot:
    required: true
    default: 'true'
    description: 'Whether to create a Maven snapshot artifact'
  openapi-spec:
    required: true
    description: 'OpenAPI spec url to use for generation'
  openapi-version:
    required: true
    description: 'OpenAPI release version to be used'

runs:
  using: 'composite'
  steps:
    # Using https://openapi-generator.tech/docs/generators/java/
    - name: Generate Java ${{ matrix.java-version }} client (${{ matrix.java-http-lib }})
      uses: openapi-generators/openapitools-generator-action@v1
      with:
        generator: java
        generator-tag: ${{ inputs.openapi-version }}
        openapi-url: ${{ inputs.openapi-spec }}
        config-file: src/cfg/java.yml
        command-args: -p artifactId=authzed-http-client-${{ matrix.java-http-lib }} -p "artifactVersion=${{ inputs.release-version }}" -p "snapshotVersion=${{ inputs.snapshot }}" -p "library=${{ matrix.java-http-lib }}"

    # using 'GitHub' as server-id prepares pushing to GitHub packages repo for snapshots
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'liberica'
        cache: maven
        cache-dependency-path: 'java-client/pom.xml'
        server-id: 'github'

    # the name of maven input directory is derived from openapi action output
    - name: Run Maven build
      shell: bash
      run: mvn -B package --file java-client/pom.xml
