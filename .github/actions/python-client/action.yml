# Schema: https://json.schemastore.org/github-action.json
name: python-client

description: Build OpenAPI Python client for given parameters.

branding:
  color: black
  icon: book

inputs:
  spicedb-version:
    required: true
    description: 'The SpiceDB version to use'
  release-version:
    required: true
    description: 'Python artifact version to use'
  openapi-spec:
    required: true
    description: 'OpenAPI spec url to use for generation'
  openapi-version:
    required: true
    description: 'OpenAPI release version to be used'

runs:
  using: 'composite'
  steps:
    # Using https://openapi-generator.tech/docs/generators/python/
    - name: Generate Python ${{ matrix.python-version }} client (${{ matrix.python-http-lib }})
      uses: openapi-generators/openapitools-generator-action@v1
      with:
        generator: python
        generator-tag: ${{ inputs.openapi-version }}
        openapi-url: ${{ inputs.openapi-spec }}
        config-file: src/cfg/python.yml
        command-args: -p packageName=authzed_http_client_${{ matrix.python-http-lib }} -p "packageVersion=${{ inputs.release-version }}" -p "library=${{ matrix.python-http-lib }}"
    - name: 'Log python-client working directory content...'
      working-directory: 'python-client'
      shell: bash
      run: |
        pwd
        ls -al
        cat pyproject.toml
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: "Install dependencies"
      working-directory: 'python-client'
      shell: bash
      run: |
        python -m pip install --upgrade pip pipx
        pipx install poetry
    - name: Setup poetry project
      shell: bash
      run: |
        poetry install --all-extras
    - name: Code linting and formatting tool using Ruff
      shell: bash
      run: |
        poetry run ruff check . --fix
    - name: Check code formatting with Ruff
      shell: bash
      run: |
        poetry run ruff format --check --target-version py39
      continue-on-error: true
    - name: "Run tests"
      working-directory: 'python-client'
      shell: bash
      # Run tox using the version of Python in `PATH`
      run: |
        poetry run tox -e py 
